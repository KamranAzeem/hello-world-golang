name: ci

on:
  push:
    branches:
      - 'main'
      - 'master'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+'
      - 'rc-[0-9]+.[0-9]+.[0-9]+'
jobs:
  docker:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE_NAME: hello-world-golang
      DOCKER_USERNAME: kamranazeem
      
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Prepare Docker Image Tags
        id: prepare-docker-image-tags
        run: |
          SHORT_REF=$(basename ${GITHUB_REF})
          SHORT_HASH=${GITHUB_SHA::7}
          TAGS=""
          if [[ ! -z "${SHORT_REF}" && "${SHORT_REF}" == "master" ]]; then 
            echo "Found git commit on master branch. Setting docker image tag as: 'latest'" 
            TAG=${DOCKER_USERNAME}/${DOCKER_IMAGE_NAME}:latest
          else 
            echo "Setting docker image tag as: '${SHORT_REF}'" 
            TAG=${DOCKER_USERNAME}/${DOCKER_IMAGE_NAME}:${SHORT_REF}
          fi
          TAGS="${TAG},${DOCKER_USERNAME}/${DOCKER_IMAGE_NAME}:${SHORT_HASH}"
          echo "Complete Docker image-name and tags are setup as: ${TAGS}"
          # echo ::set-output name=tags::${TAGS}
          echo "TAGS=${TAGS}" >> $GITHUB_ENV


      - name: Display variables
        run: |
          echo "DOCKER_IMAGE_NAME is - $DOCKER_IMAGE_NAME"
          echo "env.DOCKER_IMAGE_NAME is - ${{ env.DOCKER_IMAGE_NAME }}"
          echo "GITHUB_REF_NAME is - $GITHUB_REF_NAME"
          echo "TAGS - ${{ env.TAGS }}"

      - name: Build and push docker image
        id:  build-and-push-docker-image
        uses: docker/build-push-action@v4
        with:
          # context: .
          # file: ./Dockerfile
          push: true
          # tags: ${{ steps.prepare-docker-image-tags.outputs.tags }}
          tags: ${{ env.TAGS }}
                    
